/*
Deployment script for ToDoListDb

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "ToDoListDb"
:setvar DefaultFilePrefix "ToDoListDb"
:setvar DefaultDataPath ""
:setvar DefaultLogPath ""

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
IF EXISTS (SELECT 1
           FROM   [sys].[databases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [sys].[databases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [sys].[databases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [sys].[databases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [sys].[databases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
    END


GO
PRINT N'Creating Table [dbo].[Items]...';


GO
CREATE TABLE [dbo].[Items] (
    [ID]          INT           IDENTITY (1, 1) NOT NULL,
    [Description] VARCHAR (500) NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating Procedure [dbo].[DeleteItemById]...';


GO
CREATE PROCEDURE [dbo].[DeleteItemById]
	@id INT
AS
BEGIN
	SET NOCOUNT ON;

	DELETE FROM [dbo].[Items]
	WHERE ID = @id
END
GO
PRINT N'Creating Procedure [dbo].[GetItemById]...';


GO
CREATE PROCEDURE [dbo].[GetItemById]
	@id INT
AS
BEGIN
	SET NOCOUNT ON;

	SELECT * FROM [dbo].[Items]
	WHERE ID = @id
END
GO
PRINT N'Creating Procedure [dbo].[GetItems]...';


GO
CREATE PROCEDURE [dbo].[GetItems]
AS
BEGIN
	SET NOCOUNT ON;

	SELECT * FROM [dbo].[Items]
END
GO
PRINT N'Creating Procedure [dbo].[InsertItem]...';


GO
CREATE PROCEDURE [dbo].[InsertItem]
    @description VARCHAR(500)
AS
BEGIN
	SET NOCOUNT ON;

	INSERT INTO [dbo].[Items]
			   ([Description])
		 VALUES
			   (@description)

    SELECT Id = SCOPE_IDENTITY()

END
GO
PRINT N'Creating Procedure [dbo].[UpdateItem]...';


GO
CREATE PROCEDURE [dbo].[UpdateItem]
     @id INT,
     @description VARCHAR(500)
AS
BEGIN
	SET NOCOUNT ON;
	UPDATE [dbo].[Items]
		SET [Description] = @description
		WHERE [ID] = @id
END
GO
PRINT N'Update complete.';


GO
